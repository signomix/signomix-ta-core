signomix.release=%release%
signomix.organization.default=${SIGNOMIX_ORGANIZATION_DEFAULT:0}
signomix.database.migration=${SIGNOMIX_DATABASE_MIGRATION:false}

signomix.release.version=${SIGNOMIX_RELEASE_VERSION:0.0.0}
signomix.webapp.version=${SIGNOMIX_WEBAPP_VERSION:0.0.0}

## CONTAINER
signomix.image.group.default=
signomix.release=%release%
#signomix.app.key=${SIGNOMIX_APP_KEY}
#signomix.auth.host=${SIGNOMIX_AUTH_HOST_URL:'http://localhost:8080'}
signomix.default.organization.id=0
signomix.default.application.id=0

#DOCKER
quarkus.container-image.builder=jib
quarkus.container-image.group=${SIGNOMIX_IMAGE_GROUP:${signomix.image.group.default}}
quarkus.container-image.name=${SIGNOMIX_IMAGE_NAME:signomix-ta-core}
quarkus.container-image.tag=${SIGNOMIX_IMAGE_TAG:%release%}
# Replace with production tag before pushing image to the repository
# quarkus.container-image.tag=latest


## HTTP
quarkus.http.port=${PORT:8080}
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS
quarkus.http.cors.access-control-allow-credentials=true
quarkus.http.access-log.enabled=true

## LOGGING
quarkus.log.level=${SIGNOMIX_LOG_LEVEL:INFO}
quarkus.log.handler.gelf.enabled=${GELF_ENABLED:false}
quarkus.log.handler.gelf.host=${GELF_HOST}
quarkus.log.handler.gelf.port=${GELF_PORT}
quarkus.log.handler.gelf.additional-field.X-OVH-TOKEN.value=${GELF_TOKEN}
quarkus.log.handler.gelf.additional-field.X-OVH-TOKEN.type=String


## DATASOURCES
signomix.database.type=${SIGNOMIX_DATABASE_TYPE:postgresql}
quarkus.datasource.oltp.db-kind=postgresql
quarkus.datasource.oltp.username=${POSTGRES_USER:postgres}
quarkus.datasource.oltp.password=${POSTGRES_PASSWORD:postgres}
quarkus.datasource.oltp.jdbc.url=${POSTGRES_URL}
#quarkus.datasource.oltp.jdbc.telemetry=true

quarkus.datasource.olap.db-kind=postgresql
quarkus.datasource.olap.username=${POSTGRES_USER:postgres}
quarkus.datasource.olap.password=${POSTGRES_PASSWORD:postgres}
quarkus.datasource.olap.jdbc.url=${POSTGRES_URL}
#quarkus.datasource.olap.jdbc.telemetry=true

quarkus.datasource.iot.db-kind=h2
quarkus.datasource.iot.username=${SIGNOMIX_DATABASE_USER:sa}
quarkus.datasource.iot.password=${SIGNOMIX_DATABASE_PASSWORD}
quarkus.datasource.iot.jdbc.url=${SIGNOMIX_IOT_DATABASE_URL:jdbc:h2:mem:iot}

quarkus.datasource.auth.db-kind=postgresql
quarkus.datasource.auth.username=${POSTGRES_USER:postgres}
quarkus.datasource.auth.password=${POSTGRES_PASSWORD:postgres}
quarkus.datasource.auth.jdbc.url=${POSTGRES_URL:jdbc:h2:mem:auth}
#quarkus.datasource.auth.jdbc.telemetry=true

#quarkus.datasource.cms.db-kind=h2
#quarkus.datasource.cms.username=${SIGNOMIX_DATABASE_USER:sa}
#quarkus.datasource.cms.password=${SIGNOMIX_DATABASE_PASSWORD:}
#quarkus.datasource.cms.jdbc.url=${SIGNOMIX_CMS_DATABASE_URL:jdbc:h2:mem:auth}


quarkus.datasource.user.db-kind=postgresql
quarkus.datasource.user.username=${POSTGRES_USER:postgres}
quarkus.datasource.user.password=${POSTGRES_PASSWORD:postgres}
quarkus.datasource.user.jdbc.url=${POSTGRES_URL:jdbc:h2:mem:user}
#quarkus.datasource.user.jdbc.telemetry=true

quarkus.datasource.shortener.db-kind=postgresql
quarkus.datasource.shortener.username=${POSTGRES_USER:postgres}
quarkus.datasource.shortener.password=${POSTGRES_PASSWORD:postgres}
quarkus.datasource.shortener.jdbc.url=${POSTGRES_URL:jdbc:h2:mem:shortener}
#quarkus.datasource.shortener.jdbc.telemetry=true

quarkus.datasource.qdb.db-kind=postgresql
quarkus.datasource.qdb.username=${QDB_USER}
quarkus.datasource.qdb.password=${QDB_PASSWORD}
quarkus.datasource.qdb.jdbc.url=${QDB_URL}

questdb.client.config=${SIGNOMIX_QUESTDB_CONFIG}

signomix.data.retention.demo=1
signomix.data.retention.free=5
signomix.data.retention.extended=30
signomix.data.retention.standard=30
signomix.data.retention.primary=30
signomix.data.retention.super=365

## CACHE
quarkus.cache.caffeine."token-cache".initial-capacity=10 
quarkus.cache.caffeine."token-cache".maximum-size=1000
quarkus.cache.caffeine."token-cache".expire-after-write=60S

## Queue config
signomix.queue.username=user
signomix.queue.password=user
signomix.queue.host=signomix-mq

## MESSAGING
# rabbitmq-host=${MQ_HOST:${signomix.queue.host}}
# rabbitmq-port=${MQ_PORT:5672}
# rabbitmq-username=${MQ_USER:${signomix.queue.username}}
# rabbitmq-password=${MQ_PASSWORD:${signomix.queue.password}}

## Inbound
### EVENTS_DB
#mp.messaging.incoming.events_db.connector=smallrye-rabbitmq
#mp.messaging.incoming.events_db.exchange.durable=false
#mp.messaging.incoming.events_db.exchange.type=fanout
#mp.messaging.incoming.events_db.exchange.declare=false
#mp.messaging.incoming.events_db.exchange.name=events_db
#mp.messaging.incoming.events_db.queue.name=core-events_db
### EVENTS_DEVICE
#mp.messaging.incoming.events_device.connector=smallrye-rabbitmq
#mp.messaging.incoming.events_device.exchange.durable=false
#mp.messaging.incoming.events_device.exchange.type=fanout
#mp.messaging.incoming.events_device.exchange.declare=false
#mp.messaging.incoming.events_device.exchange.name=events_device
#mp.messaging.incoming.events_device.queue.name=core-events_device

## Outbound
# mp.messaging.outgoing.errors.connector=smallrye-rabbitmq


# mp.messaging.outgoing.events.connector=smallrye-rabbitmq
# mp.messaging.outgoing.events.exchange.name=${MQ_EVENTS_EXCHANGE: }
# mp.messaging.outgoing.events.exchange.declare=false
# mp.messaging.outgoing.events.exchange.type=fanout
# mp.messaging.outgoing.events.exchange.durable=false
# mp.messaging.outgoing.events.host=${MQ_HOST}
# mp.messaging.outgoing.events.port=${MQ_PORT}
# mp.messaging.outgoing.events.username=${MQ_USER}
# mp.messaging.outgoing.events.password=${MQ_PASSWORD}
# mp.messaging.outgoing.events.virtual-host=
# mp.messaging.outgoing.events.ssl=false

# mp.messaging.outgoing.notifications.connector=smallrye-rabbitmq
# #mp.messaging.outgoing.notifications.exchange.declare=false
# mp.messaging.outgoing.notifications.default-routing-key=#
# mp.messaging.outgoing.notifications.host=${MQ_HOST}
# mp.messaging.outgoing.notifications.port=${MQ_PORT}
# mp.messaging.outgoing.notifications.username=${MQ_USER}
# mp.messaging.outgoing.notifications.password=${MQ_PASSWORD}
# mp.messaging.outgoing.notifications.virtual-host=
# mp.messaging.outgoing.notifications.ssl=false

## MQTT
mp.messaging.outgoing.device-created.connector=smallrye-mqtt
mp.messaging.outgoing.device-created.host=signomix-broker
mp.messaging.outgoing.device-created.port=1883
mp.messaging.outgoing.device-created.topic=signomix/events/device-created
mp.messaging.outgoing.device-created.server-name=signomix-broker

mp.messaging.outgoing.device-updated.connector=smallrye-mqtt
mp.messaging.outgoing.device-updated.host=signomix-broker
mp.messaging.outgoing.device-updated.port=1883
mp.messaging.outgoing.device-updated.topic=signomix/events/device-updated
mp.messaging.outgoing.device-updated.server-name=signomix-broker

mp.messaging.outgoing.device-removed.connector=smallrye-mqtt
mp.messaging.outgoing.device-removed.host=signomix-broker
mp.messaging.outgoing.device-removed.port=1883
mp.messaging.outgoing.device-removed.topic=signomix/events/device-removed
mp.messaging.outgoing.device-removed.server-name=signomix-broker

mp.messaging.outgoing.notifications.connector=smallrye-mqtt
mp.messaging.outgoing.notifications.host=signomix-broker
mp.messaging.outgoing.notifications.port=1883
mp.messaging.outgoing.notifications.topic=signomix/notifications
mp.messaging.outgoing.notifications.server-name=signomix-broker

mp.messaging.incoming.commands.connector=smallrye-mqtt
mp.messaging.incoming.commands.host=signomix-broker
mp.messaging.incoming.commands.port=1883
mp.messaging.incoming.commands.topic=signomix/events/commands
mp.messaging.incoming.commands.server-name=signomix-broker

mp.messaging.incoming.sms-sent.connector=smallrye-mqtt
mp.messaging.incoming.sms-sent.host=signomix-broker
mp.messaging.incoming.sms-sent.port=1883
mp.messaging.incoming.sms-sent.topic=signomix/sms-sent
mp.messaging.incoming.sms-sent.server-name=signomix-broker

## OPENAPI
quarkus.smallrye-openapi.path=/api/core/q/openapi
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/api/core/q/swagger

## EXCEPTONS
signomix.exception.api.unauthorized=unauthorized
signomix.exception.device.not.found=device not found
signomix.exception.device.create=unable to create device
signomix.exception.device.update=unable to update device
signomix.exception.api.param.missing=missing request parameter
signomix.exception.user.database=database error
signomix.exception.dashboard.database=dashboard database error

## OPEN TELEMTRY
#quarkus.otel.exporter.otlp.traces.endpoint=http://jaeger-all-in-one:4317
##quarkus.otel.exporter.otlp.traces.headers=authorization=Bearer my_secret 
#quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n 
